# Publish Github Release
name: Github Release

on:
  push:
    tags:
      - v[0-9]+.*
  workflow_dispatch:
  # Reusable workflow : Optionally publish a github release from the UI.

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read version
        id: current_version
        run: |
          export PACKAGE_VERSION=$( cat box.json | jq '.version' -r )
          echo "EXTENSION_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Check changelog for this version
        id: changelog_check
        run: |
          if grep -q "${{ env.EXTENSION_VERSION }}" CHANGELOG.md ]];then
            echo "HAS_VERSION=true" >> $GITHUB_OUTPUT
          else
            echo "HAS_VERSION=false" >> $GITHUB_OUTPUT
          fi

      - name: Update changelog [unreleased] with latest version
        uses: thomaseizinger/keep-a-changelog-new-release@1.3.0
        if: env.SNAPSHOT == 'false' && steps.changelog_check.outputs.HAS_VERSION == 'false'
        with:
          changelogPath: ./CHANGELOG.md
          tag: ${{ env.EXTENSION_VERSION }}

      - name: Commit Changelog To Master
        uses: EndBug/add-and-commit@v9.1.1
        if: env.SNAPSHOT == 'false' && steps.changelog_check.outputs.HAS_VERSION == 'false'
        with:
          author_name: Github Actions
          author_email: info@ortussolutions.com
          message: 'ðŸ“– DOC: Finalized changelog for v${{ env.EXTENSION_VERSION }} - __CI__'
          add: CHANGELOG.md

      - name: Push new release
        uses: taiki-e/create-gh-release-action@v1.5.0
        with:
          changelog: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}