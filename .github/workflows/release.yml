
name: Publish a Release

on:
  # If you push to master|main this will trigger a stable release. Else, a snapshot.
  push:
    branches:
      - master
      - main
      - development
  workflow_dispatch:
  # Reusable workflow : Usually called by a `snapshot` workflow
  workflow_call:
    inputs:
      snapshot:
          description: 'Is this a snapshot build?'
          required: false
          default: false
          type: boolean

env:
  SNAPSHOT: ${{ inputs.snapshot || false }}
  PROJECT_NAME: Ortus Lucee Extensions - ORM
  EXTENSION_SLUG: ortus-orm-extension
  AWS_BUCKETNAME: downloads.ortussolutions.com
  ARTIFACTS_DIRECTORY: artifacts

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  release:
    runs-on: ubuntu-latest
    needs: tests
    if: "!contains(github.event.head_commit.message, '__CI__')"
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Read version
        id: current_version
        run: |
          export PACKAGE_VERSION=$( cat box.json | jq '.version' -r )
          echo "EXTENSION_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "BRANCH=master" >> $GITHUB_ENV
          echo "BUILD_VERSION=$PACKAGE_VERSION.${{ github.run_number}}" >> $GITHUB_ENV
          if [ $GITHUB_REF == 'refs/heads/development' ]
          then
            echo "SNAPSHOT=true" >> $GITHUB_ENV
            echo "BRANCH=development" >> $GITHUB_ENV
            echo "BUILD_VERSION=$PACKAGE_VERSION.${{ github.run_number}}-snapshot" >> $GITHUB_ENV
          fi

      - name: Update version in pom.xml
        if: env.SNAPSHOT == 'true'
        run: sed -i -e "s/${{ env.EXTENSION_VERSION }}/${{ env.BUILD_VERSION }}/g" pom.xml

      - name: Generate Javadocs
        if: env.SNAPSHOT == 'false'
        run: mvn --batch-mode -f pom.xml javadoc:javadoc

      - name: Upload API Docs to S3
        uses: jakejarvis/s3-sync-action@master
        if: env.SNAPSHOT == 'false'
        with:
          args: --acl public-read
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_APIDOCS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          SOURCE_DIR: "target/apidocs"
          DEST_DIR: "lucee/hibernate-extension/${{ env.BUILD_VERSION }}/"

      - name: Build with Maven
        run: mvn --batch-mode -f pom.xml package

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ortus_orm_${{ env.BUILD_VERSION }}.lex
          path: target/*.lex

      - run: |
            mkdir .tmp/
            mv target/*.lex .tmp/

      - name: Upload Artifact to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_DOWNLOADS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          SOURCE_DIR: ".tmp/"
          DEST_DIR: "ortussolutions/lucee-extensions/ortus-orm/${{ env.BUILD_VERSION }}/"

      - name: Setup CommandBox
        uses: Ortus-Solutions/setup-commandbox@main
        with:
          forgeboxAPIKey: ${{ secrets.FORGEBOX_API_TOKEN }}

      - run: |
          box package set version=${{ env.BUILD_VERSION }}
          box package set location="https://s3.amazonaws.com/${{ env.AWS_BUCKETNAME }}/ortussolutions/lucee-extensions/ortus-orm/${{ env.BUILD_VERSION }}/ortus_orm_${{ env.BUILD_VERSION }}.lex"
          box publish

      - name: Tag Version
        uses: rickstaa/action-create-tag@v1.6.1
        if: env.SNAPSHOT == 'false'
        with:
          tag: "v${{ env.BUILD_VERSION }}"
          force_push_tag: true
          tag_exists_error: false
          message: "Release v${{ env.BUILD_VERSION }}"

      - name: Check whether a Slack Webhook is Configured
        id: webhook_configured
        env:
            WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
            echo "HAS_WEBHOOK=${{ env.WEBHOOK_URL != '' }}" >> $GITHUB_OUTPUT

      - name: Inform Slack
        if: ${{ steps.webhook_configured.outputs.HAS_WEBHOOK == 'true' && failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ortus-hibernate-extension
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: '${{ env.EXTENSION_SLUG }} v${{ env.BUILD_VERSION }} ( ${{ env.BRANCH }} ) failed :cry:'
          SLACK_TITLE: "${{ env.PACKAGE_NAME }} Build"
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}