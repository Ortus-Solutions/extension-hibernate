<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>ortus.extension</groupId>
   <artifactId>orm-extension</artifactId>
   <version>6.0.0</version>
   <packaging>bundle</packaging>

   <name>Ortus ORM Extension</name>
   <description>A Lucee Extension to provide a native CFML integration with the Hibernate ORM engine.</description>
   <url>https://forgebox.io/view/D062D72F-F8A2-46F0-8CBC91325B2F067B</url>

   <properties>
      <name>Ortus ORM Extension</name>
      <bundlename>orm-extension</bundlename>
      <id>D062D72F-F8A2-46F0-8CBC91325B2F067B</id>
      <description>Hibernate ORM (Hibernate in short) is an object-relational mapping library for the Java language, providing a framework for mapping an object-oriented domain model to a traditional relational database. Hibernate solves object-relational impedance mismatch problems by replacing direct persistence-related database accesses with high-level object handling functions.</description>
      <class>ortus.extension.orm.HibernateORMEngine</class>

      <!-- Dependency versions -->
      <minLuceeVersion>5.3.9.73</minLuceeVersion>
      <lucee.version>5.3.10.97</lucee.version>
      <hibernate.version>5.4.29.Final</hibernate.version>

      <!-- What version of the JDK should we compile against? -->
      <jdk.version>1.8</jdk.version>
      <maven.compiler.target>${jdk.version}</maven.compiler.target>
      <maven.compiler.source>${jdk.version}</maven.compiler.source>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   </properties>

   <licenses>
      <license>
         <name>The GNU Lesser General Public License, Version 2.1</name>
         <url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
         <distribution>repo</distribution>
      </license>
   </licenses>

   <developers>
      <developer>
         <id>lmajano</id>
         <name>Luis Majano</name>
         <email>lmajano@ortussolutions.com</email>
         <organization>Ortus Solutions, Corp.</organization>
         <organizationUrl>https://www.ortussolutions.com/</organizationUrl>
         <roles>
            <role>Project-Administrator</role>
            <role>Developer</role>
         </roles>
         <timezone>+1</timezone>
      </developer>
      <developer>
         <id>michaelborn</id>
         <name>Michael Born</name>
         <email>michael@ortussolutions.com</email>
         <organization>Ortus Solutions, Corp.</organization>
         <organizationUrl>https://www.ortussolutions.com/</organizationUrl>
         <roles>
            <role>Project-Administrator</role>
            <role>Developer</role>
         </roles>
         <timezone>-4</timezone>
      </developer>
      <developer>
         <id>micstriit</id>
         <name>Michael Offner</name>
         <email>michael@lucee.org</email>
         <organization>Lucee Association Switzerland</organization>
         <organizationUrl>http://lucee.org</organizationUrl>
         <roles>
            <role>Project-Administrator</role>
            <role>Developer</role>
         </roles>
         <timezone>+1</timezone>
      </developer>
   </developers>

   <build>
      <directory>${project.basedir}/target</directory>
      <sourceDirectory>${project.basedir}/extension/src/main/java/</sourceDirectory>
      <testSourceDirectory>${project.basedir}/extension/src/test/java/</testSourceDirectory>
      <plugins>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.4.1</version>
            <executions>
               <execution>
                  <id>attach-javadocs</id>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <reportOutputDirectory>${project.build.directory}/apidocs</reportOutputDirectory>
               <additionalparam>-Xdoclint:none</additionalparam>
               <failOnError>false</failOnError>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.3</version>
         </plugin>

         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <version>5.1.8</version>
            <extensions>true</extensions>
            <configuration>
               <instructions>
                  <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                  <Bundle-Name>${project.artifactId}</Bundle-Name>

                  <!--
                     Embed all dependencies inline, EXCEPT:
                     1. ehcache as it requires a certain package structure
                     2. jtaextensions as it is an optional dependency
                     https://felix.apache.org/documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html#_embedding_dependencies
                  -->
                  <Embed-Dependency>*;scope=compile|runtime;inline=true;artifactId=!jtaextensions</Embed-Dependency>
                  <Embed-Transitive>true</Embed-Transitive>
                  <!-- Empty imports, because most dependencies are inlined.-->
                  <Import-Package>javax.transaction.*</Import-Package>
                  <Private-Package>ortus.extension.orm</Private-Package>
                  <Require-Bundle>org.lucee.xml.apis;bundle-version=1.4.1</Require-Bundle>

                  <!-- The extension version, used in ExtensionUtil -->
                  <Specification-Version>${project.version}</Specification-Version>

                  <!-- The Hibernate version, used in org.hibernate.Version  -->
                  <Implementation-Version>${hibernate.version}</Implementation-Version>
                  <!-- 
                        See:
                        https://liferay.dev/blogs/-/blogs/osgi-and-java-package-imports
                        https://bnd.bndtools.org/instructions/noimportjava.html
                     -->
                  <_noimportjava>true</_noimportjava>
               </instructions>
            </configuration>
         </plugin>

         <!--
            Generate the top-level MANIFEST.MF containing properties for this extension.

            Turns out using the NAME attribute for the lucee extension name breaks the jar manifest spec. 🤦‍♂️
            See
         https://github.com/codehaus-plexus/plexus-archiver/blob/7eb5a660a9ccb2968ce4f172baaa949c72e87f87/src/main/java/org/codehaus/plexus/archiver/jar/Manifest.java#L556

            Thus, we have to manually echo this stuff to a custom extension manifest file,
            then use the maven assembly plugin to copy that file into the resulting .lex extension.
         -->
         <plugin>
            <groupId>com.github.ekryd.echo-maven-plugin</groupId>
            <artifactId>echo-maven-plugin</artifactId>
            <version>1.3.2</version>
            <inherited>false</inherited>
            <executions>
               <execution>
                  <id>append-manifest-entries</id>
                  <phase>package</phase>
                  <goals>
                     <goal>echo</goal>
                  </goals>
                  <configuration>
                     <message>
Manifest-Version: 1.0
name: ${name}
id: ${id}
description: ${description}
version: ${project.version}
orm: [{'class':'${class}','name':'${project.artifactId}','version':'${project.version}'}]
lucee-core-version: ${minLuceeVersion}
                     </message>
                     <!-- warning: this plugin appears to wrongly interpolate properties,
                     so ${project.build.directory} ends up creating the full /home/user/path INSIDE this current
                     directory.
                     The best workaround appears to be not using those properties, and hardcoding a RELATIVE path
                     instead.-->
                     <toFile>target/META-INF/MANIFEST.MF</toFile>
                     <append>true</append>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
               <execution>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <!--
                  Since Lucee's MANIFEST.MF is incompat with Java's manifest spec,
                  the Maven Archiver will strip a bunch of entries. Hence, we can't use this option.
               <archive>
                  <manifestFile>${project.basedir}/src/main/extension/META-INF/MANIFEST.MF</manifestFile>
               </archive> -->
               <descriptors>
                  <descriptor>build/assemble.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>

         <!-- https://stackoverflow.com/a/26638952 -->
         <!--
            Rename the .zip archive to a Lucee-friendly .lex file extension
         -->
         <plugin>
            <groupId>com.coderplus.maven.plugins</groupId>
            <artifactId>copy-rename-maven-plugin</artifactId>
            <version>1.0.1</version>
            <executions>
               <execution>
                  <id>copy-file</id>
                  <phase>package</phase>
                  <goals>
                     <goal>rename</goal>
                  </goals>
                  <configuration>
                     <sourceFile>${project.build.directory}/${project.build.finalName}-lex.zip</sourceFile>
                     <destinationFile>${project.build.directory}/ortus_orm_${project.version}.lex</destinationFile>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <!-- https://jeremylong.github.io/DependencyCheck/index.html -->
         <!-- run 'mvn verify' to check dependencies for known CVEs.-->
         <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>7.3.2</version>
            <executions>
               <execution>
                  <goals>
                     <goal>check</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <skipProvidedScope>true</skipProvidedScope>
               <skipTestScope>true</skipTestScope>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.6.0</version>
            <executions>
               <execution>
                  <id>download</id>
                  <phase>package</phase>
                  <goals>
                     <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                     <classifier>sources</classifier>
                     <overWrite>true</overWrite>
                     <includeScope>compile</includeScope>
                     <!-- We can possibly use this setting to save sources with a custom filename which would please Lucee's OSGI bundle resolver. 🤔 -->
                     <!-- <destFileName>[ filename ]</destFileName> -->
                  </configuration>
               </execution>
            </executions>
         </plugin>

      </plugins>

   </build>


   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>org.junit</groupId>
            <artifactId>junit-bom</artifactId>
            <version>5.9.2</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter</artifactId>
         <version>5.9.2</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-inline</artifactId>
         <version>4.0.0</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-junit-jupiter</artifactId>
         <version>4.0.0</version>
         <scope>test</scope>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.lucee/lucee -->
      <dependency>
         <groupId>org.lucee</groupId>
         <artifactId>lucee</artifactId>
         <version>${lucee.version}</version>
         <!-- https://www.baeldung.com/maven-dependency-scopes#2-provided -->
         <scope>provided</scope>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-core</artifactId>
         <version>${hibernate.version}</version>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-jcache -->
      <!-- <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-jcache</artifactId>
         <version>${hibernate.version}</version>
      </dependency> -->

      <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-ehcache -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-ehcache</artifactId>
         <version>${hibernate.version}</version>

         <!--
         https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html#how-to-use-dependency-exclusions -->
         <exclusions>
            <exclusion>
               <groupId>org.glassfish.jaxb</groupId>
               <artifactId>txw2</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>2.0.7</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
         <version>1.4.8</version>
      </dependency>

   </dependencies>


   <repositories>
      <repository>
         <id>maven</id>
         <url>https://repo1.maven.org/maven2/</url>
      </repository>
   </repositories>

   <scm>
      <url>https://github.com/Ortus-Solutions/extension-hibernate</url>
      <connection>scm:git:git://github.com/Ortus-Solutions/extension-hibernate.git</connection>
      <developerConnection>scm:git:git@github.com:Ortus-Solutions/extension-hibernate.git</developerConnection>
      <tag>${project.version}</tag>
   </scm>

</project>